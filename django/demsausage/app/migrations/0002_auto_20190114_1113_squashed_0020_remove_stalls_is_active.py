# Generated by Django 2.1.5 on 2019-01-27 05:40

import demsausage.app.enums
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('app', '0002_auto_20190114_1113'), ('app', '0003_elections_mailgunevents'), ('app', '0004_auto_20190126_1026'), ('app', '0005_auto_20190126_1055'), ('app', '0006_auto_20190126_1058'), ('app', '0007_auto_20190126_1101'), ('app', '0008_auto_20190126_1102'), ('app', '0009_pollingplaces_election'), ('app', '0010_auto_20190126_1113'), ('app', '0011_auto_20190126_1115'), ('app', '0012_auto_20190126_1116'), ('app', '0013_auto_20190126_1119'), ('app', '0014_auto_20190126_1127'), ('app', '0015_auto_20190126_1133'), ('app', '0016_auto_20190126_1139'), ('app', '0017_stalls'), ('app', '0018_remove_stalls_stall_location_info'), ('app', '0019_auto_20190127_0522'), ('app', '0020_remove_stalls_is_active')]

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PollingPlaceFacilityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PollingPlaceNoms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('noms', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=None)),
                ('stall_name', models.TextField()),
                ('stall_description', models.TextField()),
                ('stall_website', models.TextField()),
                ('stall_extra_info', models.TextField()),
                ('first_report', models.DateTimeField(auto_now_add=True)),
                ('latest_report', models.DateTimeField(auto_now=True)),
                ('chance_of_sausage', models.FloatField()),
                ('source', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PollingPlaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_id', models.IntegerField()),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('name', models.TextField()),
                ('premises', models.TextField()),
                ('address', models.TextField()),
                ('division', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list)),
                ('state', models.CharField(max_length=3)),
                ('wheelchair_access', models.TextField()),
                ('entrances_desc', models.TextField()),
                ('opening_hours', models.TextField()),
                ('booth_info', models.TextField()),
                ('facility_type', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='app.PollingPlaceFacilityType')),
                ('noms', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='app.PollingPlaceNoms')),
            ],
        ),
        migrations.AddIndex(
            model_name='pollingplacenoms',
            index=django.contrib.postgres.indexes.GinIndex(fields=['noms'], name='app_polling_noms_c0dc2d_gin'),
        ),
        migrations.CreateModel(
            name='Elections',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_id', models.IntegerField()),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('default_zoom_level', models.IntegerField()),
                ('name', models.TextField()),
                ('is_active', models.BooleanField(default=False)),
                ('is_hidden', models.BooleanField(default=False)),
                ('polling_places_loaded', models.BooleanField(default=False)),
                ('election_day', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='MailgunEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('event_type', models.TextField()),
                ('payload', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=None)),
            ],
        ),
        migrations.AlterField(
            model_name='pollingplacenoms',
            name='chance_of_sausage',
            field=models.FloatField(null=True),
        ),
        migrations.AlterField(
            model_name='pollingplacenoms',
            name='stall_extra_info',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='pollingplacenoms',
            name='stall_website',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='pollingplacenoms',
            name='source',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='pollingplacenoms',
            name='first_report',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='pollingplacenoms',
            name='latest_report',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='pollingplacenoms',
            name='stall_description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='pollingplacenoms',
            name='stall_name',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='pollingplaces',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.Elections'),
        ),
        migrations.AlterField(
            model_name='pollingplaces',
            name='booth_info',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='pollingplaces',
            name='entrances_desc',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='pollingplaces',
            name='opening_hours',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='pollingplaces',
            name='wheelchair_access',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='pollingplaces',
            name='facility_type',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.PollingPlaceFacilityType'),
        ),
        migrations.AlterField(
            model_name='pollingplaces',
            name='noms',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.PollingPlaceNoms'),
        ),
        migrations.AlterField(
            model_name='pollingplaces',
            name='state',
            field=models.CharField(max_length=8),
        ),
        migrations.AlterField(
            model_name='pollingplaces',
            name='facility_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.PollingPlaceFacilityType'),
        ),
        migrations.AlterField(
            model_name='pollingplaces',
            name='premises',
            field=models.TextField(blank=True),
        ),
        migrations.CreateModel(
            name='Stalls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_id', models.IntegerField()),
                ('name', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('website', models.TextField(blank=True)),
                ('noms', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=None)),
                ('email', models.EmailField(max_length=254)),
                ('reported_timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.TextField(choices=[(demsausage.app.enums.StallStatus('Pending'), 'Pending'), (demsausage.app.enums.StallStatus('Approved'), 'Approved'), (demsausage.app.enums.StallStatus('Declined'), 'Declined')], default=demsausage.app.enums.StallStatus('Pending'))),
                ('mail_confirm_key', models.TextField(blank=True)),
                ('mail_confirmed', models.BooleanField(default=False)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.Elections')),
                ('polling_place', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.PollingPlaces')),
            ],
        ),
    ]
